--- a/targetlibs/nrf5x_15_3/components/ble/ble_services/ble_nus/ble_nus.c	2023-08-15 16:30:53.824541573 +0200
+++ b/targetlibs/nrf5x_15_3/components/ble/ble_services/ble_nus/ble_nus.c	2023-08-15 17:16:14.178489404 +0200
@@ -266,6 +266,17 @@
     ble_uuid.type = p_nus->uuid_type;
     ble_uuid.uuid = BLE_UUID_NUS_SERVICE;

+    security_req_t security_req = SEC_OPEN;
+#if PEER_MANAGER_ENABLED
+    if (p_nus_init->encrypt) {
+        if (p_nus_init->mitmProtect) {
+            security_req = SEC_MITM;
+        } else {
+            security_req = SEC_JUST_WORKS;
+        }
+    }
+#endif
+
     // Add the service.
     err_code = sd_ble_gatts_service_add(BLE_GATTS_SRVC_TYPE_PRIMARY,
                                         &ble_uuid,
@@ -283,8 +294,8 @@
     add_char_params.char_props.write         = 1;
     add_char_params.char_props.write_wo_resp = 1;

-    add_char_params.read_access  = SEC_OPEN;
-    add_char_params.write_access = SEC_OPEN;
+    add_char_params.read_access  = security_req;
+    add_char_params.write_access = security_req;

     err_code = characteristic_add(p_nus->service_handle, &add_char_params, &p_nus->rx_handles);
     if (err_code != NRF_SUCCESS)
@@ -302,9 +313,9 @@
     add_char_params.is_var_len        = true;
     add_char_params.char_props.notify = 1;

-    add_char_params.read_access       = SEC_OPEN;
-    add_char_params.write_access      = SEC_OPEN;
-    add_char_params.cccd_write_access = SEC_OPEN;
+    add_char_params.read_access       = security_req;
+    add_char_params.write_access      = security_req;
+    add_char_params.cccd_write_access = security_req;

     return characteristic_add(p_nus->service_handle, &add_char_params, &p_nus->tx_handles);
     /**@snippet [Adding proprietary characteristic to the SoftDevice] */
--- a/targetlibs/nrf5x_15_3/components/ble/ble_services/ble_nus/ble_nus.h	2023-08-15 16:38:02.770416000 +0200
+++ b/targetlibs/nrf5x_15_3/components/ble/ble_services/ble_nus/ble_nus.h	2023-08-15 17:14:47.847455838 +0200
@@ -173,6 +173,10 @@
 typedef struct
 {
     ble_nus_data_handler_t data_handler; /**< Event handler to be called for handling received data. */
+#if PEER_MANAGER_ENABLED
+    bool encrypt; //< GW added - require encryption
+    bool mitmProtect; //< require mitm protection
+#endif
 } ble_nus_init_t;



